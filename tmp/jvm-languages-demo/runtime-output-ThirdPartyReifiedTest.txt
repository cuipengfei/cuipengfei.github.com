[INFO] Scanning for projects...
[INFO] 
[INFO] -------------------< com.example:jvm-languages-demo >-------------------
[INFO] Building jvm-languages-demo 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- exec:3.5.1:java (default-cli) @ jvm-languages-demo ---
=== Testing Third-Party Library Reified Functions ===

1. Testing Jackson Kotlin Module Reified Functions:
   Jackson reified readValue<Person>: Person(name=Alice, age=30)
   Jackson reified readValue<Company>: Company(name=TechCorp, employees=[Person(name=Bob, age=25), Person(name=Carol, age=35)])
   Jackson reified readValue<List<Person>>: [Person(name=Dave, age=28), Person(name=Eve, age=32)]
   Jackson reified readValue<Map<String, Person>>: {key1=Person(name=Frank, age=27), key2=Person(name=Grace, age=29)}

2. Comparing Java Way vs Third-Party Kotlin Reified Way:
   Comparison test failed: Cannot construct instance of `com.example.Person` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 2]
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.example.Person` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 2]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1943)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:415)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1430)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1514)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:340)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:5038)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3954)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3922)
	at com.example.ThirdPartyReifiedTestKt.compareJavaVsReified(ThirdPartyReifiedTest.kt:80)
	at com.example.ThirdPartyReifiedTestKt.main(ThirdPartyReifiedTest.kt:25)
	at com.example.ThirdPartyReifiedTestKt.main(ThirdPartyReifiedTest.kt)
	at org.codehaus.mojo.exec.ExecJavaMojo.doMain(ExecJavaMojo.java:371)
	at org.codehaus.mojo.exec.ExecJavaMojo.doExec(ExecJavaMojo.java:360)
	at org.codehaus.mojo.exec.ExecJavaMojo.lambda$execute$0(ExecJavaMojo.java:280)
	at java.base/java.lang.Thread.run(Thread.java:1583)

3. Testing Complex Generic Types with Third-Party Reified:
   Complex type readValue<Organization>: Organization(departments={engineering=[Person(name=Alice, age=30)], marketing=[Person(name=Bob, age=25)]})
   Complex nested type: {eng=[Person(name=Carol, age=28)], sales=[Person(name=Dave, age=33)]}

=== Third-Party Reified Analysis Complete ===
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.280 s
[INFO] Finished at: 2025-09-09T22:51:52+08:00
[INFO] ------------------------------------------------------------------------
