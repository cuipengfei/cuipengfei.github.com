Classfile /D:/code/cuipengfei.github.com/tmp/jvm-languages-demo/target/classes/com/example/RuntimeTypeBypassDemo.class
  Last modified 2025-9-7; size 3093 bytes
  MD5 checksum c40aec96e1e2f8ba223936a21c24fbca
  Compiled from "RuntimeTypeBypassDemo.java"
public class com.example.RuntimeTypeBypassDemo
  minor version: 0
  major version: 65
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Methodref          #2.#3         // java/lang/Object."<init>":()V
    #2 = Class              #4            // java/lang/Object
    #3 = NameAndType        #5:#6         // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Class              #8            // java/util/ArrayList
    #8 = Utf8               java/util/ArrayList
    #9 = Methodref          #7.#3         // java/util/ArrayList."<init>":()V
   #10 = String             #11           // hello
   #11 = Utf8               hello
   #12 = InterfaceMethodref #13.#14       // java/util/List.add:(Ljava/lang/Object;)Z
   #13 = Class              #15           // java/util/List
   #14 = NameAndType        #16:#17       // add:(Ljava/lang/Object;)Z
   #15 = Utf8               java/util/List
   #16 = Utf8               add
   #17 = Utf8               (Ljava/lang/Object;)Z
   #18 = Fieldref           #19.#20       // java/lang/System.out:Ljava/io/PrintStream;
   #19 = Class              #21           // java/lang/System
   #20 = NameAndType        #22:#23       // out:Ljava/io/PrintStream;
   #21 = Utf8               java/lang/System
   #22 = Utf8               out
   #23 = Utf8               Ljava/io/PrintStream;
   #24 = String             #25           // === Using Reflection to Bypass Compile-time Check ===
   #25 = Utf8               === Using Reflection to Bypass Compile-time Check ===
   #26 = Methodref          #27.#28       // java/io/PrintStream.println:(Ljava/lang/String;)V
   #27 = Class              #29           // java/io/PrintStream
   #28 = NameAndType        #30:#31       // println:(Ljava/lang/String;)V
   #29 = Utf8               java/io/PrintStream
   #30 = Utf8               println
   #31 = Utf8               (Ljava/lang/String;)V
   #32 = String             #16           // add
   #33 = Class              #34           // java/lang/Class
   #34 = Utf8               java/lang/Class
   #35 = Methodref          #33.#36       // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   #36 = NameAndType        #37:#38       // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   #37 = Utf8               getMethod
   #38 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   #39 = Methodref          #40.#41       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #40 = Class              #42           // java/lang/Integer
   #41 = NameAndType        #43:#44       // valueOf:(I)Ljava/lang/Integer;
   #42 = Utf8               java/lang/Integer
   #43 = Utf8               valueOf
   #44 = Utf8               (I)Ljava/lang/Integer;
   #45 = Methodref          #46.#47       // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   #46 = Class              #48           // java/lang/reflect/Method
   #47 = NameAndType        #49:#50       // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   #48 = Utf8               java/lang/reflect/Method
   #49 = Utf8               invoke
   #50 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   #51 = Class              #52           // java/lang/Boolean
   #52 = Utf8               java/lang/Boolean
   #53 = Methodref          #51.#54       // java/lang/Boolean.booleanValue:()Z
   #54 = NameAndType        #55:#56       // booleanValue:()Z
   #55 = Utf8               booleanValue
   #56 = Utf8               ()Z
   #57 = InvokeDynamic      #0:#58        // #0:makeConcatWithConstants:(Z)Ljava/lang/String;
   #58 = NameAndType        #59:#60       // makeConcatWithConstants:(Z)Ljava/lang/String;
   #59 = Utf8               makeConcatWithConstants
   #60 = Utf8               (Z)Ljava/lang/String;
   #61 = Methodref          #62.#63       // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #62 = Class              #64           // java/lang/String
   #63 = NameAndType        #43:#65       // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #64 = Utf8               java/lang/String
   #65 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #66 = InvokeDynamic      #1:#67        // #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #67 = NameAndType        #59:#68       // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #68 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #69 = InterfaceMethodref #13.#70       // java/util/List.size:()I
   #70 = NameAndType        #71:#72       // size:()I
   #71 = Utf8               size
   #72 = Utf8               ()I
   #73 = InvokeDynamic      #2:#74        // #2:makeConcatWithConstants:(I)Ljava/lang/String;
   #74 = NameAndType        #59:#75       // makeConcatWithConstants:(I)Ljava/lang/String;
   #75 = Utf8               (I)Ljava/lang/String;
   #76 = String             #77           // === Iterating through list ===
   #77 = Utf8               === Iterating through list ===
   #78 = InterfaceMethodref #13.#79       // java/util/List.iterator:()Ljava/util/Iterator;
   #79 = NameAndType        #80:#81       // iterator:()Ljava/util/Iterator;
   #80 = Utf8               iterator
   #81 = Utf8               ()Ljava/util/Iterator;
   #82 = InterfaceMethodref #83.#84       // java/util/Iterator.hasNext:()Z
   #83 = Class              #85           // java/util/Iterator
   #84 = NameAndType        #86:#56       // hasNext:()Z
   #85 = Utf8               java/util/Iterator
   #86 = Utf8               hasNext
   #87 = InterfaceMethodref #83.#88       // java/util/Iterator.next:()Ljava/lang/Object;
   #88 = NameAndType        #89:#90       // next:()Ljava/lang/Object;
   #89 = Utf8               next
   #90 = Utf8               ()Ljava/lang/Object;
   #91 = InvokeDynamic      #3:#67        // #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #92 = Class              #93           // java/lang/ClassCastException
   #93 = Utf8               java/lang/ClassCastException
   #94 = Methodref          #92.#95       // java/lang/ClassCastException.getMessage:()Ljava/lang/String;
   #95 = NameAndType        #96:#97       // getMessage:()Ljava/lang/String;
   #96 = Utf8               getMessage
   #97 = Utf8               ()Ljava/lang/String;
   #98 = InvokeDynamic      #4:#67        // #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #99 = String             #100          // Error occurred when trying to cast Integer to String
  #100 = Utf8               Error occurred when trying to cast Integer to String
  #101 = String             #102          // === Direct access ===
  #102 = Utf8               === Direct access ===
  #103 = InterfaceMethodref #13.#104      // java/util/List.get:(I)Ljava/lang/Object;
  #104 = NameAndType        #105:#106     // get:(I)Ljava/lang/Object;
  #105 = Utf8               get
  #106 = Utf8               (I)Ljava/lang/Object;
  #107 = Methodref          #2.#108       // java/lang/Object.getClass:()Ljava/lang/Class;
  #108 = NameAndType        #109:#110     // getClass:()Ljava/lang/Class;
  #109 = Utf8               getClass
  #110 = Utf8               ()Ljava/lang/Class;
  #111 = InvokeDynamic      #5:#112       // #5:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #112 = NameAndType        #59:#113      // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #113 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #114 = Class              #115          // com/example/RuntimeTypeBypassDemo
  #115 = Utf8               com/example/RuntimeTypeBypassDemo
  #116 = Utf8               Code
  #117 = Utf8               LineNumberTable
  #118 = Utf8               LocalVariableTable
  #119 = Utf8               this
  #120 = Utf8               Lcom/example/RuntimeTypeBypassDemo;
  #121 = Utf8               main
  #122 = Utf8               ([Ljava/lang/String;)V
  #123 = Utf8               s
  #124 = Utf8               Ljava/lang/String;
  #125 = Utf8               e
  #126 = Utf8               Ljava/lang/ClassCastException;
  #127 = Utf8               args
  #128 = Utf8               [Ljava/lang/String;
  #129 = Utf8               stringList
  #130 = Utf8               Ljava/util/List;
  #131 = Utf8               addMethod
  #132 = Utf8               Ljava/lang/reflect/Method;
  #133 = Utf8               result
  #134 = Utf8               Z
  #135 = Utf8               obj
  #136 = Utf8               Ljava/lang/Object;
  #137 = Utf8               LocalVariableTypeTable
  #138 = Utf8               Ljava/util/List<Ljava/lang/String;>;
  #139 = Utf8               StackMapTable
  #140 = Class              #128          // "[Ljava/lang/String;"
  #141 = Utf8               Exceptions
  #142 = Class              #143          // java/lang/Exception
  #143 = Utf8               java/lang/Exception
  #144 = Utf8               SourceFile
  #145 = Utf8               RuntimeTypeBypassDemo.java
  #146 = Utf8               BootstrapMethods
  #147 = String             #148          // Successfully added integer 42: 
  #148 = Utf8               Successfully added integer 42: 
  #149 = String             #150          // List contents: 
  #150 = Utf8               List contents: 
  #151 = String             #152          // List size: 
  #152 = Utf8               List size: 
  #153 = String             #154          // String: 
  #154 = Utf8               String: 
  #155 = String             #156          // ClassCastException caught: 
  #156 = Utf8               ClassCastException caught: 
  #157 = String             #158          // Object at index 1:  (type: )
  #158 = Utf8               Object at index 1:  (type: )
  #159 = MethodHandle       #6:#160       // invokestatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #160 = Methodref          #161.#162     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #161 = Class              #163          // java/lang/invoke/StringConcatFactory
  #162 = NameAndType        #59:#164      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #163 = Utf8               java/lang/invoke/StringConcatFactory
  #164 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #165 = Utf8               InnerClasses
  #166 = Class              #167          // java/lang/invoke/MethodHandles$Lookup
  #167 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #168 = Class              #169          // java/lang/invoke/MethodHandles
  #169 = Utf8               java/lang/invoke/MethodHandles
  #170 = Utf8               Lookup
{
  public com.example.RuntimeTypeBypassDemo();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 6: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/example/RuntimeTypeBypassDemo;

  public static void main(java.lang.String[]) throws java.lang.Exception;
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=6, args_size=1
         0: new           #7                  // class java/util/ArrayList
         3: dup
         4: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
         7: astore_1
         8: aload_1
         9: ldc           #10                 // String hello
        11: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
        16: pop
        17: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
        20: ldc           #24                 // String === Using Reflection to Bypass Compile-time Check ===
        22: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        25: ldc           #13                 // class java/util/List
        27: ldc           #32                 // String add
        29: iconst_1
        30: anewarray     #33                 // class java/lang/Class
        33: dup
        34: iconst_0
        35: ldc           #2                  // class java/lang/Object
        37: aastore
        38: invokevirtual #35                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
        41: astore_2
        42: aload_2
        43: aload_1
        44: iconst_1
        45: anewarray     #2                  // class java/lang/Object
        48: dup
        49: iconst_0
        50: bipush        42
        52: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        55: aastore
        56: invokevirtual #45                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
        59: checkcast     #51                 // class java/lang/Boolean
        62: invokevirtual #53                 // Method java/lang/Boolean.booleanValue:()Z
        65: istore_3
        66: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
        69: iload_3
        70: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(Z)Ljava/lang/String;
        75: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        78: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
        81: aload_1
        82: invokestatic  #61                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        85: invokedynamic #66,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        90: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        93: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
        96: aload_1
        97: invokeinterface #69,  1           // InterfaceMethod java/util/List.size:()I
       102: invokedynamic #73,  0             // InvokeDynamic #2:makeConcatWithConstants:(I)Ljava/lang/String;
       107: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       110: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
       113: ldc           #76                 // String === Iterating through list ===
       115: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       118: aload_1
       119: invokeinterface #78,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       124: astore        4
       126: aload         4
       128: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       133: ifeq          164
       136: aload         4
       138: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       143: checkcast     #62                 // class java/lang/String
       146: astore        5
       148: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
       151: aload         5
       153: invokedynamic #91,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       158: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       161: goto          126
       164: goto          193
       167: astore        4
       169: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
       172: aload         4
       174: invokevirtual #94                 // Method java/lang/ClassCastException.getMessage:()Ljava/lang/String;
       177: invokedynamic #98,  0             // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       182: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       185: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
       188: ldc           #99                 // String Error occurred when trying to cast Integer to String
       190: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       193: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
       196: ldc           #101                // String === Direct access ===
       198: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       201: aload_1
       202: iconst_1
       203: invokeinterface #103,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
       208: astore        4
       210: getstatic     #18                 // Field java/lang/System.out:Ljava/io/PrintStream;
       213: aload         4
       215: invokestatic  #61                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       218: aload         4
       220: invokevirtual #107                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       223: invokestatic  #61                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       226: invokedynamic #111,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       231: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       234: return
      Exception table:
         from    to  target type
           118   164   167   Class java/lang/ClassCastException
      LineNumberTable:
        line 8: 0
        line 9: 8
        line 12: 17
        line 15: 25
        line 18: 42
        line 19: 66
        line 22: 78
        line 23: 93
        line 26: 110
        line 28: 118
        line 29: 148
        line 30: 161
        line 34: 164
        line 31: 167
        line 32: 169
        line 33: 185
        line 37: 193
        line 38: 201
        line 39: 210
        line 40: 234
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          148      13     5     s   Ljava/lang/String;
          169      24     4     e   Ljava/lang/ClassCastException;
            0     235     0  args   [Ljava/lang/String;
            8     227     1 stringList   Ljava/util/List;
           42     193     2 addMethod   Ljava/lang/reflect/Method;
           66     169     3 result   Z
          210      25     4   obj   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            8     227     1 stringList   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 126
          locals = [ class "[Ljava/lang/String;", class java/util/List, class java/lang/reflect/Method, int, class java/util/Iterator ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 37
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/ClassCastException ]
        frame_type = 25 /* same */
    Exceptions:
      throws java.lang.Exception
}
SourceFile: "RuntimeTypeBypassDemo.java"
BootstrapMethods:
  0: #159 invokestatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #147 Successfully added integer 42: 
  1: #159 invokestatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #149 List contents: 
  2: #159 invokestatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #151 List size: 
  3: #159 invokestatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #153 String: 
  4: #159 invokestatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #155 ClassCastException caught: 
  5: #159 invokestatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #157 Object at index 1:  (type: )
InnerClasses:
     public static final #170= #166 of #168; //Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
